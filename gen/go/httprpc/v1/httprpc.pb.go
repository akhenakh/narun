// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        (unknown)
// source: httprpc/v1/httprpc.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Helper message for HTTP headers which can have multiple values per key.
type HeaderValues struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Values []string               `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *HeaderValues) Reset() {
	*x = HeaderValues{}
	mi := &file_httprpc_v1_httprpc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeaderValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderValues) ProtoMessage() {}

func (x *HeaderValues) ProtoReflect() protoreflect.Message {
	mi := &file_httprpc_v1_httprpc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *HeaderValues) GetValues() []string {
	if x != nil {
		return x.xxx_hidden_Values
	}
	return nil
}

func (x *HeaderValues) SetValues(v []string) {
	x.xxx_hidden_Values = v
}

type HeaderValues_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Values []string
}

func (b0 HeaderValues_builder) Build() *HeaderValues {
	m0 := &HeaderValues{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Values = b.Values
	return m0
}

// Represents the essential parts of an HTTP request sent over NATS.
type NatsHttpRequest struct {
	state                   protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_Method       *string                  `protobuf:"bytes,1,opt,name=method" json:"method,omitempty"`
	xxx_hidden_Path         *string                  `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	xxx_hidden_Query        *string                  `protobuf:"bytes,3,opt,name=query" json:"query,omitempty"`
	xxx_hidden_Proto        *string                  `protobuf:"bytes,4,opt,name=proto" json:"proto,omitempty"`
	xxx_hidden_Headers      map[string]*HeaderValues `protobuf:"bytes,5,rep,name=headers" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Body         []byte                   `protobuf:"bytes,6,opt,name=body" json:"body,omitempty"`
	xxx_hidden_RemoteAddr   *string                  `protobuf:"bytes,7,opt,name=remote_addr,json=remoteAddr" json:"remote_addr,omitempty"`
	xxx_hidden_RequestUri   *string                  `protobuf:"bytes,8,opt,name=request_uri,json=requestUri" json:"request_uri,omitempty"`
	xxx_hidden_Host         *string                  `protobuf:"bytes,9,opt,name=host" json:"host,omitempty"`
	xxx_hidden_ReplySubject *string                  `protobuf:"bytes,10,opt,name=reply_subject,json=replySubject" json:"reply_subject,omitempty"`
	xxx_hidden_RequestId    *string                  `protobuf:"bytes,11,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *NatsHttpRequest) Reset() {
	*x = NatsHttpRequest{}
	mi := &file_httprpc_v1_httprpc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NatsHttpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NatsHttpRequest) ProtoMessage() {}

func (x *NatsHttpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_httprpc_v1_httprpc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NatsHttpRequest) GetMethod() string {
	if x != nil {
		if x.xxx_hidden_Method != nil {
			return *x.xxx_hidden_Method
		}
		return ""
	}
	return ""
}

func (x *NatsHttpRequest) GetPath() string {
	if x != nil {
		if x.xxx_hidden_Path != nil {
			return *x.xxx_hidden_Path
		}
		return ""
	}
	return ""
}

func (x *NatsHttpRequest) GetQuery() string {
	if x != nil {
		if x.xxx_hidden_Query != nil {
			return *x.xxx_hidden_Query
		}
		return ""
	}
	return ""
}

func (x *NatsHttpRequest) GetProto() string {
	if x != nil {
		if x.xxx_hidden_Proto != nil {
			return *x.xxx_hidden_Proto
		}
		return ""
	}
	return ""
}

func (x *NatsHttpRequest) GetHeaders() map[string]*HeaderValues {
	if x != nil {
		return x.xxx_hidden_Headers
	}
	return nil
}

func (x *NatsHttpRequest) GetBody() []byte {
	if x != nil {
		return x.xxx_hidden_Body
	}
	return nil
}

func (x *NatsHttpRequest) GetRemoteAddr() string {
	if x != nil {
		if x.xxx_hidden_RemoteAddr != nil {
			return *x.xxx_hidden_RemoteAddr
		}
		return ""
	}
	return ""
}

func (x *NatsHttpRequest) GetRequestUri() string {
	if x != nil {
		if x.xxx_hidden_RequestUri != nil {
			return *x.xxx_hidden_RequestUri
		}
		return ""
	}
	return ""
}

func (x *NatsHttpRequest) GetHost() string {
	if x != nil {
		if x.xxx_hidden_Host != nil {
			return *x.xxx_hidden_Host
		}
		return ""
	}
	return ""
}

func (x *NatsHttpRequest) GetReplySubject() string {
	if x != nil {
		if x.xxx_hidden_ReplySubject != nil {
			return *x.xxx_hidden_ReplySubject
		}
		return ""
	}
	return ""
}

func (x *NatsHttpRequest) GetRequestId() string {
	if x != nil {
		if x.xxx_hidden_RequestId != nil {
			return *x.xxx_hidden_RequestId
		}
		return ""
	}
	return ""
}

func (x *NatsHttpRequest) SetMethod(v string) {
	x.xxx_hidden_Method = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 11)
}

func (x *NatsHttpRequest) SetPath(v string) {
	x.xxx_hidden_Path = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 11)
}

func (x *NatsHttpRequest) SetQuery(v string) {
	x.xxx_hidden_Query = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 11)
}

func (x *NatsHttpRequest) SetProto(v string) {
	x.xxx_hidden_Proto = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 11)
}

func (x *NatsHttpRequest) SetHeaders(v map[string]*HeaderValues) {
	x.xxx_hidden_Headers = v
}

func (x *NatsHttpRequest) SetBody(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Body = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 11)
}

func (x *NatsHttpRequest) SetRemoteAddr(v string) {
	x.xxx_hidden_RemoteAddr = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 11)
}

func (x *NatsHttpRequest) SetRequestUri(v string) {
	x.xxx_hidden_RequestUri = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 11)
}

func (x *NatsHttpRequest) SetHost(v string) {
	x.xxx_hidden_Host = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 11)
}

func (x *NatsHttpRequest) SetReplySubject(v string) {
	x.xxx_hidden_ReplySubject = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 11)
}

func (x *NatsHttpRequest) SetRequestId(v string) {
	x.xxx_hidden_RequestId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 11)
}

func (x *NatsHttpRequest) HasMethod() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NatsHttpRequest) HasPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *NatsHttpRequest) HasQuery() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *NatsHttpRequest) HasProto() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *NatsHttpRequest) HasBody() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *NatsHttpRequest) HasRemoteAddr() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *NatsHttpRequest) HasRequestUri() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *NatsHttpRequest) HasHost() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *NatsHttpRequest) HasReplySubject() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *NatsHttpRequest) HasRequestId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *NatsHttpRequest) ClearMethod() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Method = nil
}

func (x *NatsHttpRequest) ClearPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Path = nil
}

func (x *NatsHttpRequest) ClearQuery() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Query = nil
}

func (x *NatsHttpRequest) ClearProto() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Proto = nil
}

func (x *NatsHttpRequest) ClearBody() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Body = nil
}

func (x *NatsHttpRequest) ClearRemoteAddr() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_RemoteAddr = nil
}

func (x *NatsHttpRequest) ClearRequestUri() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_RequestUri = nil
}

func (x *NatsHttpRequest) ClearHost() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_Host = nil
}

func (x *NatsHttpRequest) ClearReplySubject() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_ReplySubject = nil
}

func (x *NatsHttpRequest) ClearRequestId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_RequestId = nil
}

type NatsHttpRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Method       *string
	Path         *string
	Query        *string
	Proto        *string
	Headers      map[string]*HeaderValues
	Body         []byte
	RemoteAddr   *string
	RequestUri   *string
	Host         *string
	ReplySubject *string
	RequestId    *string
}

func (b0 NatsHttpRequest_builder) Build() *NatsHttpRequest {
	m0 := &NatsHttpRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Method != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 11)
		x.xxx_hidden_Method = b.Method
	}
	if b.Path != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 11)
		x.xxx_hidden_Path = b.Path
	}
	if b.Query != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 11)
		x.xxx_hidden_Query = b.Query
	}
	if b.Proto != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 11)
		x.xxx_hidden_Proto = b.Proto
	}
	x.xxx_hidden_Headers = b.Headers
	if b.Body != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 11)
		x.xxx_hidden_Body = b.Body
	}
	if b.RemoteAddr != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 11)
		x.xxx_hidden_RemoteAddr = b.RemoteAddr
	}
	if b.RequestUri != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 11)
		x.xxx_hidden_RequestUri = b.RequestUri
	}
	if b.Host != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 11)
		x.xxx_hidden_Host = b.Host
	}
	if b.ReplySubject != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 11)
		x.xxx_hidden_ReplySubject = b.ReplySubject
	}
	if b.RequestId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 11)
		x.xxx_hidden_RequestId = b.RequestId
	}
	return m0
}

// Represents the essential parts of an HTTP response sent back over NATS.
type NatsHttpResponse struct {
	state                  protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_StatusCode  int32                    `protobuf:"varint,1,opt,name=status_code,json=statusCode" json:"status_code,omitempty"`
	xxx_hidden_Headers     map[string]*HeaderValues `protobuf:"bytes,2,rep,name=headers" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Body        []byte                   `protobuf:"bytes,3,opt,name=body" json:"body,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NatsHttpResponse) Reset() {
	*x = NatsHttpResponse{}
	mi := &file_httprpc_v1_httprpc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NatsHttpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NatsHttpResponse) ProtoMessage() {}

func (x *NatsHttpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_httprpc_v1_httprpc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NatsHttpResponse) GetStatusCode() int32 {
	if x != nil {
		return x.xxx_hidden_StatusCode
	}
	return 0
}

func (x *NatsHttpResponse) GetHeaders() map[string]*HeaderValues {
	if x != nil {
		return x.xxx_hidden_Headers
	}
	return nil
}

func (x *NatsHttpResponse) GetBody() []byte {
	if x != nil {
		return x.xxx_hidden_Body
	}
	return nil
}

func (x *NatsHttpResponse) SetStatusCode(v int32) {
	x.xxx_hidden_StatusCode = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *NatsHttpResponse) SetHeaders(v map[string]*HeaderValues) {
	x.xxx_hidden_Headers = v
}

func (x *NatsHttpResponse) SetBody(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Body = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *NatsHttpResponse) HasStatusCode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NatsHttpResponse) HasBody() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *NatsHttpResponse) ClearStatusCode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_StatusCode = 0
}

func (x *NatsHttpResponse) ClearBody() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Body = nil
}

type NatsHttpResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	StatusCode *int32
	Headers    map[string]*HeaderValues
	Body       []byte
}

func (b0 NatsHttpResponse_builder) Build() *NatsHttpResponse {
	m0 := &NatsHttpResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.StatusCode != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_StatusCode = *b.StatusCode
	}
	x.xxx_hidden_Headers = b.Headers
	if b.Body != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Body = b.Body
	}
	return m0
}

var File_httprpc_v1_httprpc_proto protoreflect.FileDescriptor

var file_httprpc_v1_httprpc_proto_rawDesc = []byte{
	0x0a, 0x18, 0x68, 0x74, 0x74, 0x70, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x74, 0x74,
	0x70, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x68, 0x74, 0x74, 0x70,
	0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x1a, 0x21, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x26, 0x0a, 0x0c, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x22, 0xb1, 0x03, 0x0a, 0x0f, 0x4e, 0x61, 0x74, 0x73, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x42, 0x0a,
	0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x68, 0x74, 0x74, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x73,
	0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x55, 0x72, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x1a,
	0x54, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe2, 0x01, 0x0a, 0x10, 0x4e, 0x61, 0x74, 0x73, 0x48, 0x74,
	0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x43, 0x0a, 0x07, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x68,
	0x74, 0x74, 0x70, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x73, 0x48, 0x74,
	0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x1a, 0x54, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x72, 0x70, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x35, 0x5a, 0x2b, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6b, 0x68, 0x65, 0x6e, 0x61, 0x6b,
	0x68, 0x2f, 0x6e, 0x61, 0x72, 0x75, 0x6e, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x68,
	0x74, 0x74, 0x70, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x92, 0x03, 0x05, 0xd2, 0x3e, 0x02, 0x10,
	0x03, 0x62, 0x08, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x70, 0xe8, 0x07,
}

var file_httprpc_v1_httprpc_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_httprpc_v1_httprpc_proto_goTypes = []any{
	(*HeaderValues)(nil),     // 0: httprpc.v1.HeaderValues
	(*NatsHttpRequest)(nil),  // 1: httprpc.v1.NatsHttpRequest
	(*NatsHttpResponse)(nil), // 2: httprpc.v1.NatsHttpResponse
	nil,                      // 3: httprpc.v1.NatsHttpRequest.HeadersEntry
	nil,                      // 4: httprpc.v1.NatsHttpResponse.HeadersEntry
}
var file_httprpc_v1_httprpc_proto_depIdxs = []int32{
	3, // 0: httprpc.v1.NatsHttpRequest.headers:type_name -> httprpc.v1.NatsHttpRequest.HeadersEntry
	4, // 1: httprpc.v1.NatsHttpResponse.headers:type_name -> httprpc.v1.NatsHttpResponse.HeadersEntry
	0, // 2: httprpc.v1.NatsHttpRequest.HeadersEntry.value:type_name -> httprpc.v1.HeaderValues
	0, // 3: httprpc.v1.NatsHttpResponse.HeadersEntry.value:type_name -> httprpc.v1.HeaderValues
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_httprpc_v1_httprpc_proto_init() }
func file_httprpc_v1_httprpc_proto_init() {
	if File_httprpc_v1_httprpc_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_httprpc_v1_httprpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_httprpc_v1_httprpc_proto_goTypes,
		DependencyIndexes: file_httprpc_v1_httprpc_proto_depIdxs,
		MessageInfos:      file_httprpc_v1_httprpc_proto_msgTypes,
	}.Build()
	File_httprpc_v1_httprpc_proto = out.File
	file_httprpc_v1_httprpc_proto_rawDesc = nil
	file_httprpc_v1_httprpc_proto_goTypes = nil
	file_httprpc_v1_httprpc_proto_depIdxs = nil
}
